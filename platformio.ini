; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = emulator

[env]
build_flags = 
  	-D LV_CONF_INCLUDE_SIMPLE
lib_deps = 
	;lvgl/lvgl@^8.1.0 use direct link for stable version
	lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.2.0.zip
lib_archive = false

[env:emulator] ;64bits
platform = native
extra_scripts = support/sdl2_build_extra.py
build_flags = 
	${env.build_flags}
	-D LV_LOG_PRINTF=1
	; force compile backend and demos
	-I backends/sdl2
	-I ../.pio/libdeps/emulator/lvgl/demos
	-l SDL2

	; SDL drivers options
	-D LV_USE_DEMO_WIDGETS=1
	-D LV_LVGL_H_INCLUDE_SIMPLE
	-D LV_DRV_NO_CONF
	-D USE_SDL
	-D SDL_HOR_RES=800
  	-D SDL_VER_RES=480 
	-D SDL_ZOOM=1
	-D USE_MOUSE
	-D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

	; LVGL memory options, setup for the demo to run properly
  	-D LV_MEM_CUSTOM=1
  	-D LV_MEM_SIZE="(128U * 1024U)"

lib_deps = 
	${env.lib_deps}
	;lvgl/lv_drivers @ ^8.1.0  use direct link for stable version
	lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip
src_filter = 
	+<*>
	+<../backends/sdl2>
	+<../.pio/libdeps/emulator/lvgl/demos>


[env:disco_f469ni]
platform = ststm32
board = disco_f469ni
framework = mbed
build_flags = 
	${env.build_flags}
	-I backends/stm32f469_disco
	;-I ../.pio/libdeps/stm32f469_disco/lvgl/demos
	;-D HSE_VALUE=12000000
src_filter = 
	+<*>
	+<../backends/stm32f469_disco>
	; Force compile LVGL demo, remove when working on your own project
	;+<../.pio/libdeps/stm32f469_disco/lvgl/demos>
    

